def sudoku_grid_correct(sudoku: list):
  # row control
  def row_correct(sudoku: list, row_no: int):
      row = sudoku[row_no]
      row_control = True
      for var in row:
          if var > 0 and row.count(var) > 1:
              row_control = False
              break
      return row_control
  for i in range(len(sudoku)):
    if row_correct(sudoku, i)==False:
      return False
  # column control
  def column_correct(sudoku: list, column_no: int):
      column = [row[column_no] for row in sudoku]  # list comprehension, anlatılacak ilerde
      column_control = True
      for var in column:
          if var > 0 and column.count(var) > 1:
              column_control = False
              break
      return column_control
  for i in range(len(sudoku)):
    if column_correct(sudoku, i)==False:
      return False
  # 3x3 matrix control
  for i in range(0,7,3):
    for j in range(0,7,3):
      if small_matrix_correct(sudoku, i, j) == False:
        return False
  return True
  # bunun için bir tane fonksiyon yazacagız
def small_matrix_correct(sudoku, i, j):
    small_matrix = []
    # Loop through the 3x3 block starting from (i, j)
    for row in range(i, i + 3):
        for col in range(j, j + 3):
            small_matrix.append(sudoku[row][col])  # Use [row][col] to access elements
    small_matrix_check = True
    # Check for duplicates (excluding 0s)
    for var in small_matrix:
        if small_matrix.count(var) > 1 and var > 0:  # Check for duplicates and exclude 0
            small_matrix_check = False
            break
    return small_matrix_check
sudoku1 = [
  [9, 0, 0, 0, 8, 0, 3, 0, 0],
  [2, 0, 0, 2, 5, 0, 7, 0, 0],
  [0, 2, 0, 3, 0, 0, 0, 0, 4],
  [2, 9, 4, 0, 0, 0, 0, 0, 0],
  [0, 0, 0, 7, 3, 0, 5, 6, 0],
  [7, 0, 5, 0, 6, 0, 4, 0, 0],
  [0, 0, 7, 8, 0, 3, 9, 0, 0],
  [0, 0, 1, 0, 0, 0, 0, 0, 3],
  [3, 0, 0, 0, 0, 0, 0, 0, 2]
]
print(sudoku_grid_correct(sudoku1))
sudoku2 = [
  [2, 6, 7, 8, 3, 9, 5, 0, 4],
  [9, 0, 3, 5, 1, 0, 6, 0, 0],
  [0, 5, 1, 6, 0, 0, 8, 3, 9],
  [5, 1, 9, 0, 4, 6, 3, 2, 8],
  [8, 0, 2, 1, 0, 5, 7, 0, 6],
  [6, 7, 4, 3, 2, 0, 0, 0, 5],
  [0, 0, 0, 4, 5, 7, 2, 6, 3],
  [3, 2, 0, 0, 8, 0, 0, 5, 7],
  [7, 4, 5, 0, 0, 3, 9, 0, 1]
]
print(sudoku_grid_correct(sudoku2))"""
